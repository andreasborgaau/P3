@using ManagementPages.Model.Category
@using ManagementPages.Model.InformationBoard
@using Syncfusion.Blazor.DropDowns
@using ManagementPages.Services
@inject IDbService _dbService

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display: @ModalDisplay">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ny Kategori - @SelectedInformationBoard.InformationBoardDataModel.Title</h5>
                <button @onclick="() => Close()" type="button" class="close btn btn-secondary" data-dismiss="modal" aria-label="Close">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>

            <EditForm Model="NewCategoryModelTemp" OnValidSubmit="SaveAndClose">
                <DataAnnotationsValidator/>
                <ValidationSummary/>

                <div class="col-12 row modal-body">
                    <div class="col-6">
                        <label for="title" class="form-label">Titel</label>
                        <input type="text" class="form-control" id="title" @bind-value="NewCategoryModelTemp.Title">
                    </div>
                    <div class="col-6">
                        <label for="icon" class="form-label">Ikon</label>
                        <SfDropDownList CssClass="form-control" ID="icon" TValue="string" Placeholder="VÃ¦lg et ikon" TItem="IconOption" @bind-Value="@NewCategoryModelTemp.Icon"
                                        DataSource="@Icons">
                            <DropDownListFieldSettings IconCss="BootstrapCode" Value="BootstrapCode" Text="Name"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="() => Close()">Slet</button>
                    <button type="submit" class="btn btn-secondary" data-dismiss="modal" @onclick="() => IsPublished = false">Gem som kladde</button>
                    <button type="submit" class="btn btn-success" data-dismiss="modal" @onclick="() => IsPublished = true">Gem</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {

    [Parameter]
    public EventCallback OnChangesMade { get; set; }

    public bool IsPublished { get; set; }

    public IInformationBoardModel SelectedInformationBoard { get; set; } = new InformationBoardModel();

    public CategoryDataModel NewCategoryModelTemp = new();


    public List<IconOption> Icons = IconOptions.Icons;

    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open(IInformationBoardModel selectedInformationBoard)
    {
        SelectedInformationBoard = selectedInformationBoard;
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    public void SaveAndClose()
    {
        Close();

        // add new category to database
        SelectedInformationBoard.AddNewCategory(NewCategoryModelTemp, IsPublished, _dbService);

        // notify CategoryOverview about changes, so that the list of categories is re-fetched from the database (to give
        // the new category a category ID, and to update the view)
        OnChangesMade.InvokeAsync();

        // reset temporary category object
        NewCategoryModelTemp = new CategoryDataModel();
    }
}
