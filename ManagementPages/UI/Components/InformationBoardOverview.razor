@using ManagementPages.Model.InformationBoard
@using ManagementPages.Model.License
@using ManagementPages.UI.Components.Modals

<EditInfoboard @ref="EditInfoboard" OnChangesMade="OnChangesMadeInChildComponent"/>
<InfoboardStatistics @ref="InfoboardStatistics"/>
<InfoboardQR @ref="InfoboardQR"/>

<section class="row col">
    <div class="col ps-4">
        <p class="fw-bold fs-5 border-dark border-2 border-bottom">Informationstavler</p>
        <table class="table table-hover bg-white rounded">
            <tbody>
                @foreach (var informationBoard in License.InformationBoards)
                {
                    if (informationBoard.Equals(License.SelectedInformationBoard))
                    {
                        <tr class="" style="transform: rotate(0);">
                            @if (informationBoard.InformationBoardDataModel.IsPublished)
                            {
                                <td class="table-active">
                                    <button class="btn btn-outline p-0 stretched-link" @onclick="() => SetSelectedInformationBoard(informationBoard)" style="">
                                        @informationBoard.InformationBoardDataModel.Title
                                    </button>
                                </td>
                            }
                            else
                            {
                                <td class="table-active">
                                    <button class="btn btn-outline p-0 text-muted stretched-link" @onclick="() => SetSelectedInformationBoard(informationBoard)" style="">
                                        @informationBoard.InformationBoardDataModel.Title
                                    </button>
                                </td>
                            }
                            <td class="table-active">
                                <div class="float-end">
                                    <button @onclick="() => EditInfoboard.Open(informationBoard)" class="btn ms-1 p-0">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button @onclick="() => InfoboardQR.Open()" class="btn ms-1 p-0">
                                        <i class="bi bi-qr-code"></i>
                                    </button>
                                    <button @onclick="() => InfoboardStatistics.Open()" class="btn ms-1 p-0">
                                        <i class="bi bi-bar-chart"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                    else
                    {
                    <tr class="" style="transform: rotate(0);">
                        @if (informationBoard.InformationBoardDataModel.IsPublished)
                         {
                            <td class="" >
                                <button class="btn btn-outline p-0 shadow-none stretched-link" @onclick="() => SetSelectedInformationBoard(informationBoard)">
                                    @informationBoard.InformationBoardDataModel.Title
                                </button>
                            </td>
                         }
                         else
                         {
                            <td class="">
                                <button class="btn btn-outline p-0 text-muted shadow-none stretched-link" @onclick="() => SetSelectedInformationBoard(informationBoard)">
                                    @informationBoard.InformationBoardDataModel.Title
                                </button>
                            </td>
                         }

                <td class="">
                    <div class="float-end">
                        <button @onclick="() => EditInfoboard.Open(informationBoard)" class="btn ms-1 p-0">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button @onclick="() => InfoboardQR.Open()" class="btn ms-1 p-0">
                            <i class="bi bi-qr-code"></i>
                        </button>
                        <button @onclick="() => InfoboardStatistics.Open()" class="btn ms-1 p-0">
                            <i class="bi bi-bar-chart"></i>
                        </button>
                    </div>
                </td>
            </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</section>

@code {
    [Parameter]
    public ILicenseModel License { get; set; }

    [Parameter]
    public EventCallback OnChangesMade { get; set; } // a method from parent (Admin.razor) must be specified/subscribed when using the component

    private void SetSelectedInformationBoard(IInformationBoardModel selectedInformationBoard)
    {
        License.SelectedInformationBoard = selectedInformationBoard;

        // inform parent (Admin.razor) that changes have been made, meaning that it should rerender the entire view
        // this is done, as the displayed categories and posts should be the ones from the selected informationboard,
        // so those components need to be updated
        OnChangesMade.InvokeAsync();
    }

    private EditInfoboard EditInfoboard { get; set; }
    private InfoboardStatistics InfoboardStatistics { get; set; }
    private InfoboardQR InfoboardQR { get; set; }

    private void OnChangesMadeInChildComponent()
    {
        // inform parent (Admin.razor) that changes have been made to the information boards, so that
        // it rerenders the entire view
        OnChangesMade.InvokeAsync();
    }
}